apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
  namespace: pchaikovskyi
spec:
  replicas: 1
  serviceName: mongo
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo
              key: MONGO_INITDB_ROOT_USERNAME
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo
              key: MONGO_INITDB_ROOT_PASSWORD
        resources:
          limits:
            cpu: "0.5"
            memory: "256Mi"
          requests:
            cpu: "0.2"
            memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: pchaikovskyi
spec:
  ports:
  - port: 27017
    name: mongo
  clusterIP: None
  selector:
    app: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  labels:
    app: application
  namespace: pchaikovskyi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: application
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
      - name: application
        image: pavlochaikovskyi/pchaikovskyi_application:v2.0
        ports:
        - containerPort: 5000
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: application
              key: DEBUG
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              name: application
              key: MONGO_HOST
        - name: MONGO_PORT
          valueFrom:
            configMapKeyRef:
              name: application
              key: MONGO_PORT
        - name: BG_COLOR
          valueFrom:
            configMapKeyRef:
              name: application
              key: BG_COLOR
        - name: FAIL_FLAG
          valueFrom:
            configMapKeyRef:
              name: application
              key: FAIL_FLAG
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
        readinessProbe:
          httpGet:
            path: /healthx
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "0.5"
            memory: "128Mi"
          requests:
            cpu: "0.2"
            memory: "64Mi"
      imagePullSecrets:
      - name: docker-secret
      initContainers:
      - name: wait-for-mongo
        image: busybox
        command: ['sh', '-c', "until nslookup mongo.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for mydb; sleep 5; done"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: application
  namespace: pchaikovskyi
data:
  DEBUG: "true"
  MONGO_HOST: "mongo"
  MONGO_PORT: "27017"
  BG_COLOR: "teal"
  FAIL_FLAG: "false"
---
apiVersion: v1
kind: Service
metadata:
  name: application
  namespace: pchaikovskyi
spec:
  selector:
    app: application
  ports:
  - protocol: TCP
    port: 80
    name: http
    targetPort: 5000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: pchaikovskyi
spec:
  ingressClassName: nginx
  rules:
  - host: pchaikovskyi.application.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: application
            port:
              number: 80